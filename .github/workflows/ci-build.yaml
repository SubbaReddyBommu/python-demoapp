name: CI Build App

on:
  push:
    branches: [master]
    paths:
      - 'src/**'
  pull_request:

env:
  IMAGE_REPO: m219raptis/python-demoapp

jobs:
  test:
    name: 'Tests & Linting'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Run linting'
        run: make lint

      - name: 'Run tests'
        run: make test-report

      - name: 'Upload test results'
        uses: actions/upload-artifact@v3
        # Disabled when running locally with the nektos/act tool
        if: ${{ always() && !env.ACT }}
        with:
          name: test-results
          path: ./test-results.xml

      - name: 'Publish test results'
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() && !env.ACT }}
        with:
          files: test-results.xml

  build:
    name: 'Build & Push Image'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      # Nicer than using github runid, I think, will be picked up automatically by make
      - name: 'Create datestamp image tag'
        run: sudo echo "IMAGE_TAG=$(date +%d-%m-%Y.%H%M)" >> $GITHUB_ENV

      - name: 'Docker build image'
        run: make image

      # Only when pushing to default branch (e.g. master or main), then push image to registry
      - name: 'Push to container registry'
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          docker login -u $D_REG_USER -p $D_REG_PW
          make push

      # - name: 'Trigger AKS release pipeline'
      #   if: github.ref == 'refs/heads/master'
      #   uses: benc-uk/workflow-dispatch@v1
      #   with:
      #     workflow: 'CD Release - AKS'
      #     token: ${{ secrets.GH_PAT }}
      #     inputs: '{ "IMAGE_TAG": "${{ env.IMAGE_TAG }}" }'

      # - name: 'Trigger Azure web app release pipeline'
      #   if: github.ref == 'refs/heads/master'
      #   uses: benc-uk/workflow-dispatch@v1
      #   with:
      #     workflow: 'CD Release - Webapp'
      #     token: ${{ secrets.GH_PAT }}
      #     inputs: '{ "IMAGE_TAG": "${{ env.IMAGE_TAG }}" }'
